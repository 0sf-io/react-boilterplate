/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/RjQ8F2ZUUhN
 */
import {Label} from 'components/ui/label';
import {Input} from 'components/ui/input';
import {Button} from 'components/ui/button';
import {ErrorMessage} from '@hookform/error-message';
import {WorkingIndicator} from 'components/common/working-indicator';
import {useState} from 'react';
import {SubmitHandler, useForm} from 'react-hook-form';
import {Trans, useTranslation} from 'react-i18next';
import {NavLink} from 'react-router-dom';

interface IFormInput {
    password: string;
    confirm_password: string;
}

export function ResetPassword() {
    const {t} = useTranslation();
    const [working, setWorking] = useState(false);
    const {register, formState: {errors}, handleSubmit} = useForm<IFormInput>();
    const onSubmit: SubmitHandler<IFormInput> = async (data) => {
        console.log(data);
        setWorking(true);
        try {
            await new Promise((_, reject) => setTimeout(reject, 5000));
        } catch (e) {
            console.log(e);
        } finally {
            setWorking(false);
        }
    };

    return (
        <div className="mx-auto max-w-md space-y-6">
            <div className="space-y-2 text-center">
                <h1 className="text-3xl font-bold">
                    <Trans>Reset Password</Trans>
                </h1>
                <p className="text-gray-500 dark:text-gray-400">
                    <Trans>Enter your new password below</Trans>
                </p>
            </div>
            <form onSubmit={handleSubmit(onSubmit)}>
                <div className="space-y-4">
                    <div className="space-y-2">
                        <Label htmlFor="password">
                            <Trans>New Password</Trans>
                        </Label>
                        <Input id="password"
                               placeholder="Enter new password"
                               type="password"
                               {...register('password', {
                                   required: t('This field is required'),
                                   minLength: {
                                       value: 8,
                                       message: t('Password must be at least 8 characters'),
                                   },
                               })}
                        />
                        <ErrorMessage errors={errors}
                                      name="password"
                                      render={({message}) => <p className="text-red-500">{message}</p>}
                        />
                    </div>
                    <div className="space-y-2">
                        <Label htmlFor="confirm-password">
                            <Trans>Confirm New Password</Trans>
                        </Label>
                        <Input id="confirm-password"
                               placeholder="Confirm new password"
                               type="password"
                               {...register('confirm_password', {
                                   required: t('This field is required'),
                               })}
                        />
                        <ErrorMessage errors={errors}
                                      name="confirm_password"
                                      render={({message}) => <p className="text-red-500">{message}</p>}
                        />
                    </div>
                    <Button className="w-full" type="submit">
                        <Trans>Update Password</Trans> {working && <WorkingIndicator className="ml-2" />}
                    </Button>
                </div>
            </form>
            <div className="mt-4 text-center text-sm">
                <Trans>Remembered your old password?</Trans>
                <NavLink className="underline" to="#">
                    <Trans>Log in</Trans>
                </NavLink>
            </div>
        </div>
    );
}
