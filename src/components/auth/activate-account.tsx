/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/yGb9bdU4Fg1
 */
import {yupResolver} from '@hookform/resolvers/yup';
import {Form, FormControl, FormDescription, FormField, FormItem} from 'components/ui/form';
import {InputOTP, InputOTPGroup, InputOTPSeparator, InputOTPSlot} from 'components/ui/input-otp';
import {Button} from 'components/ui/button';
import {WorkingIndicator} from 'components/common/working-indicator';
import {useState} from 'react';
import {SubmitHandler, useForm} from 'react-hook-form';
import {Trans} from 'react-i18next';
import {NavLink} from 'react-router-dom';
import * as yup from 'yup';

interface IFormProps {
    pin: string;
}

const schema = yup.object({
    pin: yup.string().min(6).required(),
}).required();

export function ActivateAccount() {
    const [working, setWorking] = useState(false);
    const form = useForm<IFormProps>({
        resolver: yupResolver(schema),
        defaultValues: {
            pin: '',
        },
    });
    const onSubmit: SubmitHandler<IFormProps> = async (data) => {
        setWorking(true);
        try {
            console.log(data);
            await new Promise((_, reject) => setTimeout(reject, 5000));
        } catch (e) {
            console.log(e);
        } finally {
            setWorking(false);
        }
    };

    return (
        <div className="mx-auto max-w-md space-y-6">
            <div className="space-y-2 text-center">
                <h1 className="text-3xl font-bold">
                    <Trans>Activate Your Account</Trans>
                </h1>
                <p className="text-gray-500 dark:text-gray-400">
                    <Trans>Enter your activation code below</Trans>
                </p>
            </div>
            <div className="space-y-4">
                <Form {...form}>
                    <form onSubmit={form.handleSubmit(onSubmit)}>
                        <FormField
                            control={form.control}
                            name="pin"
                            render={({field}) => (
                                <FormItem>
                                    <FormControl>
                                        <InputOTP
                                            maxLength={6}
                                            className="flex items-center justify-center"
                                            render={({slots}) => (
                                                <>
                                                    <InputOTPGroup>
                                                        {slots.slice(0, 3).map((slot, index) => (
                                                            <InputOTPSlot key={index} {...slot} />
                                                        ))}{' '}
                                                    </InputOTPGroup>
                                                    <InputOTPSeparator />
                                                    <InputOTPGroup>
                                                        {slots.slice(3).map((slot, index) => (
                                                            <InputOTPSlot key={index + 3} {...slot} />
                                                        ))}
                                                    </InputOTPGroup>
                                                </>
                                            )}
                                            onComplete={form.handleSubmit(onSubmit)}
                                            {...field} />
                                    </FormControl>
                                    <FormDescription className="text-center py-2 pb-2">
                                        Please enter the 6-digit code sent to your email.
                                    </FormDescription>
                                </FormItem>
                            )}/>
                    <Button className="w-full" type="submit" disabled={working || !form.formState.isValid}>
                        <Trans>Activate Account</Trans> {working && <WorkingIndicator className="ml-2" />}
                    </Button>
                    </form>
                </Form>
            </div>
            <div className="mt-4 text-center text-sm">
                <Trans>Didn't receive an activation code?</Trans>
                <NavLink className="underline ml-2" to="#">
                    <Trans>Resend Activation Code</Trans>
                </NavLink>
            </div>
        </div>
    );
}
